spring.application.name=medcare

api.security.token.secret=my-secret-key
server.port=8081



# ----------------------------------------
# 1. Configuração JPA (Hibernate)
# ----------------------------------------

#Gera o esquema do DB automaticamente na inicialização
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

# ----------------------------------------
# 2. Habilitar o Console Web do H2
# ----------------------------------------

#Habilita o console do H2 para que você possa ver os dados
spring.h2.console.enabled=true
#Define o caminho de acesso ao console (ex: http://localhost:8081/h2-console)
spring.h2.console.path=/h2-console
spring.datasource.url=jdbc:h2:file:./data/medcare_db
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password

# ----------------------------------------
# 3. Configuracao do RabbitMQ
# ----------------------------------------
spring.rabbitmq.addresses=amqps://thdrwxig:IW10e-P7n7u1VtlUIRzS_xKhkEaRyS06@beaver.rmq.cloudamqp.com/thdrwxig

# Habilitar SSL/TLS, obrigatorio para conexoes remotas na porta 5672
#spring.rabbitmq.ssl.enabled=true

# ----------------------------------------
# 4. Configuracao do Spring Cloud Stream
# ----------------------------------------

# Define o nome da funcao que atua como consumidor (supondo o nome do bean eh 'handleRegistration')
spring.cloud.function.definition=handleRegistration

# ----------------------------------------
# 4. Lista de filas RabbitMQ
# ----------------------------------------
#Fila para criação de usuário de médico
medcare.rabbitmq.queue.medic-registered=medic-registration-topic.auth-service-group
#Fila para criação de usuário de paciente
medcare.rabbitmq.queue.patient-registered=patient-registration-topic.auth-service-group

# Define o nome da fila/tipico e o grupo do consumidor (CRiTICO)
spring.cloud.stream.bindings.handleRegistration-in-0.destination=medic-registration-topic
spring.cloud.stream.bindings.handleRegistration-in-0.group=auth-service-group
spring.cloud.stream.bindings.handleRegistration-in-0.content-type=application/json

# Configuracao para reprocessamento de mensagens (resiliencia)
spring.cloud.stream.bindings.handleRegistration-in-0.consumer.max-attempts=3

# ----------------------------------------
# 5. Configuracao do MySQL (ms_profile)
# ----------------------------------------
# spring.datasource.url=jdbc:mysql://localhost:3306/ms_user
# spring.datasource.username=root
# spring.datasource.password=admin
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Configuracaes do JPA/Hibernate
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect


# Loga excecoes do listener do RabbitMQ para facilitar a depuracao
logging.level.org.springframework.amqp.rabbit.listener=DEBUG
# Loga excecoes de binding do Spring Cloud Stream
logging.level.org.springframework.cloud.stream.binder.rabbit.RabbitMessageChannelBinder=DEBUG